{"version":3,"sources":["components/LockForm.tsx","components/Welcome.tsx","components/UploadForm.tsx","App.tsx","reportWebVitals.ts","index.tsx","config.js"],"names":["DepositForm","onSubmit","type","name","onClick","e","preventDefault","Welcome","href","target","rel","UploadForm","inProgress","useState","file","setFile","id","onChange","event","files","className","undefined","App","wallet","api","uploads","setUploads","uploading","setUploading","deposit","setDeposit","useEffect","isSignedIn","hasDeposit","then","accountId","getAccountId","signOut","window","location","replace","origin","pathname","requestSignIn","addDeposit","catch","err","alert","message","store","request","cid","releaseDeposits","reload","map","u","navigator","clipboard","writeText","status","status_code","console","warn","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ENV","process","a","nearConfig","getConfig","NODE_ENV","connect","deps","keyStore","keyStores","BrowserLocalStorageKeyStore","near","WalletConnection","init","account","provider","registry","initConnection","ReactDOM","render","document","getElementById","CONTRACT_NAME","module","exports","env","networkId","nodeUrl","contractName","walletUrl","helperUrl","keyPath","HOME","masterAccount","Error"],"mappings":"2PAMe,SAASA,EAAT,GAAyD,IAAlCC,EAAiC,EAAjCA,SACpC,OACE,+BACE,wBACEC,KAAK,SACLC,KAAK,UACLC,QAAS,SAAAC,GACPA,EAAEC,iBACFL,KALJ,uBCPS,SAASM,IACtB,OACE,gCACE,+EACiD,IAC/C,mBAAGC,KAAK,uBAAuBC,OAAO,SAASC,IAAI,aAAnD,yCAFF,aAKa,IACX,mBAAGF,KAAK,mBAAmBC,OAAO,SAASC,IAAI,aAA/C,kBAEK,IARP,6BAS6B,IAC3B,mBAAGF,KAAK,sBAAsBC,OAAO,SAASC,IAAI,aAAlD,sBAEK,IAZP,cAeA,qTAIwE,IACtE,mBAAGF,KAAK,6BAA6BC,OAAO,SAASC,IAAI,aAAzD,8BAEK,IAPP,4BAUA,uECvBS,SAASC,EAAT,GAGU,IAFvBC,EAEsB,EAFtBA,WACAX,EACsB,EADtBA,SACsB,EACEY,qBADF,mBACfC,EADe,KACTC,EADS,KAEtB,OACE,+BACE,2BAAUC,GAAG,WAAb,UACE,uBACEd,KAAK,OACLC,KAAK,OACLc,SAAU,SAAAC,GACJA,EAAMT,OAAOU,OAAOJ,EAAQG,EAAMT,OAAOU,MAAM,OAGvD,wBACEjB,KAAK,SACLC,KAAK,SACLiB,WAA0B,IAAfR,EAAsB,UAAY,GAC7CR,QAAS,SAAAC,GACPA,EAAEC,iBACEQ,GAAMb,EAASa,GACnBC,OAAQM,IAPZ,yB,YC6HOC,EAtIH,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,IAA+B,EACtBX,mBAAyB,IADH,mBAC7CY,EAD6C,KACpCC,EADoC,OAElBb,oBAAkB,GAFA,mBAE7Cc,EAF6C,KAElCC,EAFkC,OAGtBf,oBAAkB,GAHI,mBAG7CgB,EAH6C,KAGpCC,EAHoC,KAKpDC,qBAAU,WACJR,EAAOS,cACTR,EAAIS,aAAaC,KAAKJ,KAEvB,CAACP,EAAQC,IAEZ,IAAMW,EAAYZ,EAAOa,eA8CzB,OACE,iCACE,mCACE,gEACCD,EACC,wBAAQ/B,QAVA,WACdmB,EAAOc,UACPC,OAAOC,SAASC,QAAQF,OAAOC,SAASE,OAASH,OAAOC,SAASG,WAQ3D,qBAEA,wBAAQtC,QAhBD,WACbuC,YAAcpB,EAAQ,KAehB,uBAGJ,4BACGM,EAAU,0BAAH,8BAAiDM,EAAjD,OAETA,EACC,gCACE,cAAC,EAAD,CAAMlC,SA/BG,WACfuB,EACGoB,aACAV,MAAK,kBAAMJ,GAAW,MACtBe,OAAM,SAACC,GAAD,OAAgBC,MAAMD,EAAIE,eA4B5BnB,EACC,cAAC,EAAD,CAAQ5B,SA7DD,SAACa,GAChBc,GAAa,GACbJ,EACGyB,MAAMnC,GACNoB,MAAK,SAAAgB,GACJxB,EAAW,GAAD,mBAAKD,GAAL,CAAcyB,KACxBtB,GAAa,GACbmB,MAAM,cAAD,OAAeG,EAAQC,IAAI,UAEjCN,OAAM,SAACC,GACNlB,GAAa,GACbmB,MAAMD,EAAIE,aAkDsBpC,WAAYe,IACtC,KACJ,wBACEzB,KAAK,SACLC,KAAK,UACLC,QAAS,SAAAC,GACPA,EAAEC,iBACFkB,EACG4B,kBACAlB,MAAK,WACJa,MACE,0DAGFT,OAAOC,SAASc,YAEjBR,OAAM,SAACC,GAAD,OAAgBC,MAAMD,EAAIE,aAdvC,qBAmBA,uBACCvB,GAAW,8CACXA,EAAQ6B,KAAI,SAACC,GACZ,OACE,8BACGA,EAAEJ,IAAI,KACP,uBACA,wBACEjD,KAAK,SACLC,KAAK,OACLC,QAAS,SAAAC,GACPA,EAAEC,iBACFkD,UAAUC,UAAUC,UAAUH,EAAEJ,IAAI,OALxC,sBAUA,wBACEjD,KAAK,SACLC,KAAK,SACLC,QAAS,SAAAC,GAvFR,IAACW,EAwFAX,EAAEC,kBAxFFU,EAyFSuC,EAAEvC,IAvFzBQ,EACGmC,OAAO3C,GACPkB,MAAK,YAAkB,IAAfgB,EAAc,EAAdA,QACPH,MAAM,0BAAD,OAA2BG,EAAQU,YAAnC,UAENf,OAAM,SAACC,GAAD,OAAgBC,MAAMD,EAAIE,YAEnCa,QAAQC,KAAK,0CA2EH,oBAUA,gCAMR,cAACvD,EAAD,Q,0CC/HOwD,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCERO,G,OAAOC,qI,4CAEb,kCAAAC,EAAA,6DACQC,EAAaC,IAAWJ,EAAIK,UAAoB,WADxD,SAIqBC,kBAAQ,aACzBC,KAAM,CACJC,SAAU,IAAIC,YAAUC,8BAEvBP,IARP,cAIQQ,EAJR,OAYQ3D,EAAS,IAAI4D,mBAAiBD,EAAM,MAZ5C,SAcQvC,YAAcpB,GAdtB,uBAgBoB6D,YAAK7D,EAAO8D,UAAW,CACvCC,SAAU,0BACVC,SAAU,4BAlBd,cAgBQ/D,EAhBR,yBAqBS,CAAEA,MAAKD,WArBhB,6C,kEAwBAiE,GAAiBtD,MAAK,YAAsB,IAAnBV,EAAkB,EAAlBA,IAAKD,EAAa,EAAbA,OAC5BkE,IAASC,OACP,cAAC,EAAD,CAAKlE,IAAKA,EAAYD,OAAQA,IAC9BoE,SAASC,eAAe,YAO5B7B,K,iBC9CA,IAAMQ,EAAMC,oIACNqB,EAAgBtB,EAAIsB,eAAiB,0BAiE3CC,EAAOC,QA1DP,SAAmBC,GACjB,OAAOA,GACL,IAAK,UACH,MAAO,CACLC,UAAW,UACXC,QAAS,+BACTC,aAAcN,EACdO,UAAW,0BACXC,UAAW,mCAIf,IAAK,aACL,IAAK,cACL,IAAK,UACH,MAAO,CACLJ,UAAW,UACXC,QAAS,+BACTC,aAAcN,EACdO,UAAW,kCACXC,UAAW,mCAEf,IAAK,UACH,MAAO,CACLJ,UAAW,UACXC,QAAS,+BACTC,aAAcN,EACdO,UAAW,kCACXC,UAAW,mCAEf,IAAK,QACH,MAAO,CACLJ,UAAW,QACXC,QAAS,wBACTI,QAAQ,GAAD,OAAK/B,EAAIgC,KAAT,6BACPH,UAAW,+BACXD,aAAcN,GAElB,IAAK,OACL,IAAK,KACH,MAAO,CACLI,UAAW,cACXC,QAAS,kCACTC,aAAcN,EACdW,cAAe,aAEnB,IAAK,aACH,MAAO,CACLP,UAAW,sBACXC,QAAS,kCACTC,aAAcN,EACdW,cAAe,aAEnB,QACE,MAAMC,MAAM,8BAAD,OAA+BT,EAA/B,8C","file":"static/js/main.1927aacf.chunk.js","sourcesContent":["import React, { ReactElement } from \"react\";\n\ninterface Props {\n  onSubmit: () => void;\n}\n\nexport default function DepositForm({ onSubmit }: Props): ReactElement {\n  return (\n    <form>\n      <button\n        type=\"button\"\n        name=\"deposit\"\n        onClick={e => {\n          e.preventDefault();\n          onSubmit();\n        }}\n      >\n        Deposit\n      </button>\n    </form>\n  );\n}\n","import React, { ReactElement } from \"react\";\n\nexport default function Welcome(): ReactElement {\n  return (\n    <div>\n      <p>\n        This app demonstrates the client-side usage of{\" \"}\n        <a href=\"https://near.storage\" target=\"_blank\" rel=\"noreferrer\">\n          the NEAR to Filecoin bridge\n        </a>\n        , allowing{\" \"}\n        <a href=\"https://near.org\" target=\"_blank\" rel=\"noreferrer\">\n          NEAR\n        </a>{\" \"}\n        users to store data on the{\" \"}\n        <a href=\"https://filecoin.io\" target=\"_blank\" rel=\"noreferrer\">\n          Filecoin\n        </a>{\" \"}\n        network.\n      </p>\n      <p>\n        This is version 0 of the demo app. You can deposit and release funds,\n        query for the status of a \"file\" or deal, and more. This is a beta\n        release demo, do not store personal, encrypted, or illegal data. Data\n        will not be available permanently on either Filecoin or IPFS. See the{\" \"}\n        <a href=\"https://near.storage/terms\" target=\"_blank\" rel=\"noreferrer\">\n          terms of service\n        </a>{\" \"}\n        before using the demo.\n      </p>\n      <p>Go ahead and sign in to try it out!</p>\n    </div>\n  );\n}\n","import { useState, ReactElement } from \"react\";\n\ninterface Props {\n  inProgress: boolean;\n  onSubmit: (file: File) => void;\n}\n\nexport default function UploadForm({\n  inProgress,\n  onSubmit\n}: Props): ReactElement {\n  const [file, setFile] = useState<File>();\n  return (\n    <form>\n      <fieldset id=\"fieldset\">\n        <input\n          type=\"file\"\n          name=\"file\"\n          onChange={event => {\n            if (event.target.files) setFile(event.target.files[0]);\n          }}\n        ></input>\n        <button\n          type=\"button\"\n          name=\"upload\"\n          className={inProgress === true ? \"loading\" : \"\"}\n          onClick={e => {\n            e.preventDefault();\n            if (file) onSubmit(file);\n            setFile(undefined);\n          }}\n        >\n          Upload\n        </button>\n      </fieldset>\n    </form>\n  );\n}\n","import \"regenerator-runtime/runtime\";\nimport { useState, ReactElement, useEffect } from \"react\";\nimport Form from \"./components/LockForm\";\nimport Welcome from \"./components/Welcome\";\nimport Upload from \"./components/UploadForm\";\nimport { CoreAPI, Request, requestSignIn } from \"@textile/near-storage\";\nimport { WalletConnection } from \"near-api-js\";\n\ninterface Props {\n  api: CoreAPI<string>;\n  wallet: WalletConnection;\n}\n\nconst App = ({ wallet, api }: Props): ReactElement => {\n  const [uploads, setUploads] = useState<Array<Request>>([]);\n  const [uploading, setUploading] = useState<boolean>(false);\n  const [deposit, setDeposit] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (wallet.isSignedIn()) {\n      api.hasDeposit().then(setDeposit);\n    }\n  }, [wallet, api]);\n\n  const accountId = wallet.getAccountId();\n\n  const onUpload = (file: File) => {\n    setUploading(true);\n    api\n      .store(file)\n      .then(request => {\n        setUploads([...uploads, request]);\n        setUploading(false);\n        alert(`IPFS CID:\\n${request.cid[\"/\"]}`);\n      })\n      .catch((err: Error) => {\n        setUploading(false);\n        alert(err.message);\n      });\n  };\n\n  const onStatus = (id: string) => {\n    if (id) {\n      api\n        .status(id)\n        .then(({ request }) => {\n          alert(`Filecoin deal status: \"${request.status_code}\"!`);\n        })\n        .catch((err: Error) => alert(err.message));\n    } else {\n      console.warn(\"no 'active' file, upload a file first\");\n    }\n  };\n\n  const onSubmit = () => {\n    api\n      .addDeposit()\n      .then(() => setDeposit(true))\n      .catch((err: Error) => alert(err.message));\n  };\n\n  const signIn = () => {\n    requestSignIn(wallet, {});\n  };\n\n  const signOut = () => {\n    wallet.signOut();\n    window.location.replace(window.location.origin + window.location.pathname);\n  };\n\n  return (\n    <main>\n      <header>\n        <h1>Textile Ⓝear Storage Demo</h1>\n        {accountId ? (\n          <button onClick={signOut}>Log out</button>\n        ) : (\n          <button onClick={signIn}>Log in</button>\n        )}\n      </header>\n      <p>\n        {deposit ? \"You got Ⓝ in here!\" : `Deposit some funds, ${accountId}!`}\n      </p>\n      {accountId ? (\n        <div>\n          <Form onSubmit={onSubmit} />\n          {deposit ? (\n            <Upload onSubmit={onUpload} inProgress={uploading} />\n          ) : null}\n          <button\n            type=\"button\"\n            name=\"release\"\n            onClick={e => {\n              e.preventDefault();\n              api\n                .releaseDeposits()\n                .then(() => {\n                  alert(\n                    \"if your session is over, your funds should be returned\"\n                  );\n                  // Auto-refresh the page\n                  window.location.reload();\n                })\n                .catch((err: Error) => alert(err.message));\n            }}\n          >\n            Release\n          </button>\n          <br />\n          {uploads && <h2>Your uploads</h2>}\n          {uploads.map((u: Request) => {\n            return (\n              <p>\n                {u.cid[\"/\"]}\n                <br />\n                <button\n                  type=\"button\"\n                  name=\"copy\"\n                  onClick={e => {\n                    e.preventDefault();\n                    navigator.clipboard.writeText(u.cid[\"/\"]);\n                  }}\n                >\n                  Copy CID\n                </button>\n                <button\n                  type=\"button\"\n                  name=\"status\"\n                  onClick={e => {\n                    e.preventDefault();\n                    onStatus(u.id);\n                  }}\n                >\n                  Status\n                </button>\n                <br />\n              </p>\n            );\n          })}\n        </div>\n      ) : (\n        <Welcome />\n      )}\n    </main>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/// <reference lib=\"dom\" />\n\nimport App from \"./App\";\nimport ReactDOM from \"react-dom\";\nimport getConfig from \"./config.js\";\nimport { connect, keyStores, WalletConnection } from \"near-api-js\";\nimport { init, requestSignIn } from \"@textile/near-storage\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.scss\";\n\n// Seems like a strange hack\nconst ENV = (process.env as unknown) as Record<string, string>;\n\nasync function initConnection() {\n  const nearConfig = getConfig((ENV.NODE_ENV as any) || \"testnet\");\n\n  // Initializing connection to the NEAR TestNet\n  const near = await connect({\n    deps: {\n      keyStore: new keyStores.BrowserLocalStorageKeyStore()\n    },\n    ...nearConfig\n  });\n\n  // Needed to access wallet\n  const wallet = new WalletConnection(near, null);\n\n  await requestSignIn(wallet);\n\n  const api = await init(wallet.account(), {\n    provider: \"bridge-provider.testnet\",\n    registry: \"bridge-registry.testnet\"\n  });\n\n  return { api, wallet };\n}\n\ninitConnection().then(({ api, wallet }) => {\n  ReactDOM.render(\n    <App api={api as any} wallet={wallet} />,\n    document.getElementById(\"root\")\n  );\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// Seems like a strange hack\nconst ENV = process.env\nconst CONTRACT_NAME = ENV.CONTRACT_NAME || 'filecoin-bridge.testnet';\n\n/**\n * \n * @param {\"mainnet\" | \"production\" | \"development\" | \"testnet\" | \"betanet\" | \"local\" | \"test\" | \"ci\" | \"ci-betanet\"} env \n * @returns \n */\nfunction getConfig(env) {\n  switch(env) {\n    case 'mainnet':\n      return {\n        networkId: 'mainnet',\n        nodeUrl: 'https://rpc.mainnet.near.org',\n        contractName: CONTRACT_NAME,\n        walletUrl: 'https://wallet.near.org',\n        helperUrl: 'https://helper.mainnet.near.org'\n      };\n    // This is an example app so production is set to testnet.\n    // You can move production to mainnet if that is applicable.\n    case 'production':\n    case 'development':\n    case 'testnet':\n      return {\n        networkId: 'testnet',\n        nodeUrl: 'https://rpc.testnet.near.org',\n        contractName: CONTRACT_NAME,\n        walletUrl: 'https://wallet.testnet.near.org',\n        helperUrl: 'https://helper.testnet.near.org'\n      };\n    case 'betanet':\n      return {\n        networkId: 'betanet',\n        nodeUrl: 'https://rpc.betanet.near.org',\n        contractName: CONTRACT_NAME,\n        walletUrl: 'https://wallet.betanet.near.org',\n        helperUrl: 'https://helper.betanet.near.org'\n      };\n    case 'local':\n      return {\n        networkId: 'local',\n        nodeUrl: 'http://localhost:3030',\n        keyPath: `${ENV.HOME}/.near/validator_key.json`,\n        walletUrl: 'http://localhost:4000/wallet',\n        contractName: CONTRACT_NAME\n      };\n    case 'test':\n    case 'ci':\n      return {\n        networkId: 'shared-test',\n        nodeUrl: 'https://rpc.ci-testnet.near.org',\n        contractName: CONTRACT_NAME,\n        masterAccount: 'test.near'\n      };\n    case 'ci-betanet':\n      return {\n        networkId: 'shared-test-staging',\n        nodeUrl: 'https://rpc.ci-betanet.near.org',\n        contractName: CONTRACT_NAME,\n        masterAccount: 'test.near'\n      };\n    default:\n      throw Error(`Misconfigured environment '${env}'. Can be configured in src/config.js.`);\n  }\n}\n\nmodule.exports = getConfig"],"sourceRoot":""}