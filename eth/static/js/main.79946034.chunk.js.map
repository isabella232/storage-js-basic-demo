{"version":3,"sources":["components/LockForm.tsx","components/Welcome.tsx","components/UploadForm.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DepositForm","onSubmit","type","name","onClick","e","preventDefault","Welcome","href","target","rel","UploadForm","inProgress","useState","file","setFile","id","onChange","event","files","className","undefined","App","wallet","api","address","uploads","setUploads","uploading","setUploading","deposit","setDeposit","useEffect","hasDeposit","then","addDeposit","catch","err","alert","message","store","request","cid","releaseDeposits","window","location","reload","map","u","navigator","clipboard","writeText","status","Status","status_code","console","warn","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","a","ethereum","enable","provider","providers","Web3Provider","getSigner","init","getAddress","initEthConnection","props","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79946034.chunk.js","sourcesContent":["import React, { ReactElement} from 'react';\n\ninterface Props {\n  onSubmit: () => void,\n}\n\nexport default function DepositForm({ onSubmit }: Props): ReactElement {\n  return (\n    <form>\n      <button type=\"button\" name=\"deposit\" onClick={(e) => {\n        e.preventDefault();\n        onSubmit();\n      }}>\n        Deposit\n      </button>\n    </form>\n  );\n}\n","import React, { ReactElement } from 'react';\n\nexport default function Welcome(): ReactElement {\n  return (\n    <div>\n      <p>\n          This app demonstrates the client-side usage of <a href=\"https://near.storage\" target=\"_blank\" rel=\"noreferrer\">the NEAR to Filecoin bridge</a>, allowing <a href=\"https://near.org\" target=\"_blank\" rel=\"noreferrer\">NEAR</a> users to store data on the <a href=\"https://filecoin.io\" target=\"_blank\" rel=\"noreferrer\">Filecoin</a> network. \n      </p>\n      <p>\n          This is version 0 of the demo app. You can deposit and release funds,\n          query for the status of a \"file\" or deal, and more. This is a beta release demo, do not store personal, encrypted, or illegal data. Data will not be available permanently on either Filecoin or IPFS. See the <a href=\"https://near.storage/terms\" target=\"_blank\" rel=\"noreferrer\">terms of service</a> before using the demo.\n      </p>\n      <p>\n          Go ahead and sign in to try it out!\n      </p>\n    </div>\n  );\n}\n","import React, { useState, ReactElement } from 'react';\n\ninterface Props {\n  inProgress: boolean\n  onSubmit: (file: File) => void;\n}\n\nexport default function UploadForm({ inProgress, onSubmit }: Props): ReactElement {\n  const [file, setFile] = useState<File>();\n  return (\n    <form>\n      <fieldset id=\"fieldset\">\n        <input type=\"file\" name=\"file\" onChange={(event) => {\n          if (event.target.files)\n            setFile(event.target.files[0]);\n        }}></input>\n        <button type=\"button\" name=\"upload\" className={inProgress===true ? \"loading\" : \"\"} onClick={(e) => {\n          e.preventDefault();\n          if (file) onSubmit(file);\n          setFile(undefined);\n        }}>\n          Upload\n        </button>\n      </fieldset>\n    </form>\n  );\n}","import 'regenerator-runtime/runtime';\nimport { useState, ReactElement, useEffect } from 'react';\nimport Form from './components/LockForm';\nimport Welcome from './components/Welcome';\nimport Upload from \"./components/UploadForm\";\nimport { Signer } from \"ethers\"\nimport { Status, CoreAPI, Request } from \"@textile/eth-storage\"\n\ninterface Props {\n  api: CoreAPI\n  wallet: Signer\n  address: string\n}\n\nconst App = ({ wallet, api, address }: Props): ReactElement => {\n  const [uploads, setUploads] = useState<Array<Request>>([]);\n  const [uploading, setUploading] = useState<boolean>(false);\n  const [deposit, setDeposit] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (wallet) {\n      api.hasDeposit().then(setDeposit)\n    }\n  }, [wallet, api])\n\n  const onUpload = (file: File) => {\n    setUploading(true)\n    api.store(file)\n      .then((request) => {\n        setUploads([...uploads, request])\n        setUploading(false)\n        alert(`IPFS CID:\\n${request.cid[\"/\"]}`)\n      })\n      .catch((err: Error) => {\n        setUploading(false)\n        alert(err.message)\n      });\n  }\n\n  const onStatus = (id: string) => {\n    if (id) {\n      api.status(id)\n        .then(({ request }) => {\n          alert(`Filecoin deal status: \"${Status[request.status_code]}\"!`)\n        })\n        .catch((err: Error) => alert(err.message));\n    } else {\n      console.warn(\"no 'active' file, upload a file first\")\n    }\n  }\n\n  const onSubmit = () => {\n    api.addDeposit()\n      .then(() => setDeposit(true))\n      .catch((err: Error) => alert(err.message));\n  };\n\n  return (\n    <main>\n      <header>\n        <h1>Textile Ξthereum Storage Demo</h1>\n      </header>\n      <p>\n        {deposit ? \"You got Ξ in here!\" : `Deposit some funds, ${address}!`}\n      </p>\n      {address\n        ? (<div>\n          <Form onSubmit={onSubmit} />\n          {deposit ? <Upload onSubmit={onUpload} inProgress={uploading} /> : null}\n          <button type=\"button\" name=\"release\" onClick={(e) => {\n            e.preventDefault();\n            api.releaseDeposits()\n              .then(() => {\n                alert(\"check your wallet in case of released funds\")\n                // Auto-refresh the page\n                window.location.reload();\n              })\n              .catch((err: Error) => alert(err.message));\n          }}>Release\n          </button>\n          <br />\n          {uploads && <h2>Your uploads</h2>}\n          {uploads.map((u: Request) => {\n            return <p>\n              {u.cid[\"/\"]}\n              <br />\n              <button type=\"button\" name=\"copy\" onClick={(e) => {\n                e.preventDefault();\n                navigator.clipboard.writeText(u.cid[\"/\"])\n              }}>\n                Copy CID\n              </button>\n              <button type=\"button\" name=\"status\" onClick={(e) => {\n                e.preventDefault();\n                onStatus(u.id);\n              }}>\n                Status\n              </button>\n              <br />\n            </p>\n          })}\n        </div>\n        ) : <Welcome />\n      }\n    </main>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/// <reference lib=\"dom\" />\n\nimport App from \"./App\"\nimport ReactDOM from \"react-dom\";\nimport { providers } from \"ethers\";\nimport { init } from \"@textile/eth-storage\";\nimport reportWebVitals from \"./reportWebVitals\"\nimport \"./index.scss\";\n\ndeclare global {\n  interface Window {\n    ethereum: providers.ExternalProvider\n  }\n}\n\nasync function initEthConnection() {\n  await (window.ethereum as any).enable();\n  const provider = new providers.Web3Provider(window.ethereum);\n  const wallet = provider.getSigner();\n\n  const api = await init(wallet);\n  const address = await wallet.getAddress();\n\n  return { api, wallet, address }\n}\n\ninitEthConnection()\n  .then((props) => {\n    ReactDOM.render(\n      <App\n        {...props}\n      />,\n      document.getElementById('root')\n    );\n  });\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}